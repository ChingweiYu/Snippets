This is a comparison between a standard binary search and a biased binary search
that instead of picking mid = low + (high - low) / 2, pick mid = low + (high - low) / 4.

For integer arrays, biased binary search is slightly more efficient than standard binary search.
This may be due to the misprediction penalty in standard binary search.
However, if the comparison between elements is expensive, then comparison will dominate the time cost.
Or, if the size of element is larger, than cache miss penalty will dominate the time cost.
Thus, biased binary search may only be useful in some limited scenarios.

Benchmark                             Time           CPU Iterations
-------------------------------------------------------------------
SearchBenchmark/Random               61 ns         61 ns  220175360
SearchBenchmark/BinarySearch        362 ns        358 ns   41525135
SearchBenchmark/BiasedSearch        330 ns        329 ns   41023754
SearchBenchmark/STLSearch           338 ns        337 ns   40771240
SearchBenchmark/BSearch             385 ns        384 ns   35157620
