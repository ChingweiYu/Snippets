I compared different algorithms of rotating an array.
Gries-Mills's method is faster than other methods, which confirms the result on Dr.Dobb's (http://www.drdobbs.com/parallel/benchmarking-block-swapping-algorithms/232900395).

However, I also found that Gries-Mill's method is slower when rotate for a very small or large amount, but is faster when rotate a moderately large amount.

Benchmark                                  Time           CPU Iterations
------------------------------------------------------------------------
Rotation/JugglingBentley/1          11045676 ns   10938359 ns         64
Rotation/JugglingBentley/6.40723k   18468270 ns   18360784 ns         37
Rotation/JugglingBentley/1024k      11535560 ns   11477814 ns         59
Rotation/JugglingShene/1            11562335 ns   11538379 ns         58
Rotation/JugglingShene/6.40723k     21584541 ns   21522281 ns         32
Rotation/JugglingShene/1024k        11478547 ns   11442250 ns         64
Rotation/RotateReverse/1             1896237 ns    1888322 ns        351
Rotation/RotateReverse/6.40723k      1867399 ns    1863435 ns        361
Rotation/RotateReverse/1024k         1818232 ns    1816407 ns        356
Rotation/BlockSwapShene/1            2113432 ns    2111030 ns        332
Rotation/BlockSwapShene/6.40723k     2370139 ns    2369028 ns        284
Rotation/BlockSwapShene/1024k        2521763 ns    2515832 ns        285
Rotation/BlockSwapGries/1            5972233 ns    5965063 ns        111
Rotation/BlockSwapGries/6.40723k      897726 ns     896362 ns        726
Rotation/BlockSwapGries/1024k       11033209 ns   11027169 ns         65
